{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\XBXD5499\\\\Desktop\\\\Joaquims-folder\\\\next-ssr\\\\pages\\\\robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"robots\"), __jsx(Link, {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(\"button\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"back yo\")), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, props.robots.map(robot => __jsx(\"li\", {\n  key: robot.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}))));\n\nRobots.getInitialProps = async () => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await res.json();\n  return {\n    robots: data\n  };\n};\n\nexport default Robots;","map":{"version":3,"sources":["C:\\Users\\XBXD5499\\Desktop\\Joaquims-folder\\next-ssr\\pages\\robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","getInitialProps","res","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAClB;AAAK,EAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAFR,CALJ,CADJ;;AAgBAL,MAAM,CAACM,eAAP,GAAyB,YAAY;AACjC,QAAMC,GAAG,GAAG,MAAMR,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMS,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,SAAO;AACHP,IAAAA,MAAM,EAAEM;AADL,GAAP;AAGH,CAND;;AAQA,eAAeR,MAAf","sourcesContent":["import Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\n\r\nconst Robots = (props) => (\r\n    <div>\r\n        <h1>robots</h1>\r\n        <Link href='/'>\r\n            <button>back yo</button>\r\n        </Link>\r\n        <div>\r\n            {\r\n                props.robots.map(robot => (\r\n                    < li key={robot.id} ></li>\r\n                ))\r\n            }\r\n        </div>\r\n    </div>\r\n);\r\n\r\nRobots.getInitialProps = async () => {\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/users');\r\n    const data = await res.json();\r\n    return {\r\n        robots: data\r\n    };\r\n}\r\n\r\nexport default Robots;"]},"metadata":{},"sourceType":"module"}